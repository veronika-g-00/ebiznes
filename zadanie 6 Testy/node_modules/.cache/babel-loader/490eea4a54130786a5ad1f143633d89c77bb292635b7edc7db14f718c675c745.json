{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\veron\\\\Desktop\\\\INFORMATYKA STOSOWANA\\\\Semestr II\\\\Ebiznes\\\\zadanie 5 Frontend\\\\client\\\\src\\\\Platnosci.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Platnosci() {\n  _s();\n  const [kwota, setKwota] = useState('');\n  const [metodaPlatnosci, setMetodaPlatnosci] = useState('karta');\n  const [statusWysylki, setStatusWysylki] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setStatusWysylki('Wysyłanie danych...');\n\n    // Podstawowa walidacja kwoty\n    const kwotaNumeryczna = parseFloat(kwota);\n    if (isNaN(kwotaNumeryczna) || kwotaNumeryczna <= 0) {\n      setStatusWysylki('Proszę podać poprawną kwotę dodatnią.');\n      return; // Przerwij wysyłanie\n    }\n    const daneDoWyslania = {\n      kwota: kwotaNumeryczna,\n      metoda: metodaPlatnosci\n    };\n    try {\n      // Pamiętaj o konfiguracji proxy w package.json (\"proxy\": \"http://localhost:8080\")\n      // lub podaj pełny adres URL serwera backendowego\n      const odpowiedz = await fetch('/api/payments', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(daneDoWyslania)\n      });\n      if (!odpowiedz.ok) {\n        // Spróbuj odczytać treść błędu z odpowiedzi serwera, jeśli jest\n        let errorMsg = `HTTP error! status: ${odpowiedz.status}`;\n        try {\n          const errorBody = await odpowiedz.json();\n          errorMsg += ` - ${errorBody.message || JSON.stringify(errorBody)}`;\n        } catch (e) {\n          // Ignoruj błąd parsowania JSON, użyj domyślnego komunikatu\n        }\n        throw new Error(errorMsg);\n      }\n      setStatusWysylki('Płatność przetworzona pomyślnie!');\n      setKwota('');\n      setMetodaPlatnosci('karta');\n    } catch (error) {\n      console.error(\"Błąd podczas wysyłania płatności:\", error);\n      // Wyświetl bardziej szczegółowy błąd, jeśli jest dostępny\n      setStatusWysylki(`Błąd: ${error.message || 'Nie udało się przetworzyć płatności. Sprawdź połączenie lub spróbuj ponownie.'}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"P\\u0142atno\\u015B\\u0107\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"kwota\",\n          children: \"Kwota:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"kwota\",\n          value: kwota,\n          onChange: e => setKwota(e.target.value),\n          required: true,\n          step: \"0.01\",\n          min: \"0.01\" // Dodana walidacja HTML\n          ,\n          placeholder: \"0.00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" PLN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"metoda\",\n          children: \"Metoda p\\u0142atno\\u015Bci:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"metoda\",\n          value: metodaPlatnosci,\n          onChange: e => setMetodaPlatnosci(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"karta\",\n            children: \"Karta kredytowa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"blik\",\n            children: \"BLIK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"przelew\",\n            children: \"Przelew bankowy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Zap\\u0142a\\u0107\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), statusWysylki && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: statusWysylki\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Platnosci, \"ar+skz2Mh0YxydpK0FPYGnkN8xI=\");\n_c = Platnosci;\nexport default Platnosci;\nvar _c;\n$RefreshReg$(_c, \"Platnosci\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Platnosci","_s","kwota","setKwota","metodaPlatnosci","setMetodaPlatnosci","statusWysylki","setStatusWysylki","handleSubmit","event","preventDefault","kwotaNumeryczna","parseFloat","isNaN","daneDoWyslania","metoda","odpowiedz","fetch","method","headers","body","JSON","stringify","ok","errorMsg","status","errorBody","json","message","e","Error","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","step","min","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/veron/Desktop/INFORMATYKA STOSOWANA/Semestr II/Ebiznes/zadanie 5 Frontend/client/src/Platnosci.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Platnosci() {\r\n  const [kwota, setKwota] = useState('');\r\n  const [metodaPlatnosci, setMetodaPlatnosci] = useState('karta');\r\n  const [statusWysylki, setStatusWysylki] = useState('');\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setStatusWysylki('Wysyłanie danych...');\r\n\r\n    // Podstawowa walidacja kwoty\r\n    const kwotaNumeryczna = parseFloat(kwota);\r\n    if (isNaN(kwotaNumeryczna) || kwotaNumeryczna <= 0) {\r\n         setStatusWysylki('Proszę podać poprawną kwotę dodatnią.');\r\n         return; // Przerwij wysyłanie\r\n    }\r\n\r\n    const daneDoWyslania = {\r\n      kwota: kwotaNumeryczna,\r\n      metoda: metodaPlatnosci,\r\n    };\r\n\r\n    try {\r\n      // Pamiętaj o konfiguracji proxy w package.json (\"proxy\": \"http://localhost:8080\")\r\n      // lub podaj pełny adres URL serwera backendowego\r\n      const odpowiedz = await fetch('/api/payments', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(daneDoWyslania),\r\n      });\r\n\r\n      if (!odpowiedz.ok) {\r\n         // Spróbuj odczytać treść błędu z odpowiedzi serwera, jeśli jest\r\n         let errorMsg = `HTTP error! status: ${odpowiedz.status}`;\r\n         try {\r\n            const errorBody = await odpowiedz.json();\r\n            errorMsg += ` - ${errorBody.message || JSON.stringify(errorBody)}`;\r\n         } catch(e) {\r\n            // Ignoruj błąd parsowania JSON, użyj domyślnego komunikatu\r\n         }\r\n         throw new Error(errorMsg);\r\n      }\r\n\r\n      setStatusWysylki('Płatność przetworzona pomyślnie!');\r\n      setKwota('');\r\n      setMetodaPlatnosci('karta');\r\n    } catch (error) {\r\n      console.error(\"Błąd podczas wysyłania płatności:\", error);\r\n      // Wyświetl bardziej szczegółowy błąd, jeśli jest dostępny\r\n      setStatusWysylki(`Błąd: ${error.message || 'Nie udało się przetworzyć płatności. Sprawdź połączenie lub spróbuj ponownie.'}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Płatność</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"kwota\">Kwota:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"kwota\"\r\n            value={kwota}\r\n            onChange={(e) => setKwota(e.target.value)}\r\n            required\r\n            step=\"0.01\"\r\n            min=\"0.01\" // Dodana walidacja HTML\r\n            placeholder=\"0.00\"\r\n          />\r\n          <span> PLN</span> {/* Dodano jednostkę dla jasności */}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"metoda\">Metoda płatności:</label>\r\n          <select\r\n            id=\"metoda\"\r\n            value={metodaPlatnosci}\r\n            onChange={(e) => setMetodaPlatnosci(e.target.value)}\r\n          >\r\n            <option value=\"karta\">Karta kredytowa</option>\r\n            <option value=\"blik\">BLIK</option>\r\n            <option value=\"przelew\">Przelew bankowy</option>\r\n          </select>\r\n        </div>\r\n        <button type=\"submit\">Zapłać</button>\r\n      </form>\r\n      {statusWysylki && <p>{statusWysylki}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Platnosci;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}